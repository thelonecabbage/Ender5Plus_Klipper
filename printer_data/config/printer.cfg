# [include fluidd.cfg]
[include config/shell_command.cfg]
# !Ender-5 Plus
# printer_size: 350x350x400
# version: 3.4
# This file contains pin mappings for the Creality Ender 5 Plus.
# Ender 5 Plus stock uses a Creality v2.2 board, similar to CR-20 Pro.
# To use this config, the firmware should be compiled for the AVR
# atmega2560.

# See docs/Config_Reference.md for a description of parameters.

###fluidd set

[mcu]
serial: /dev/ttyAMA0
restart_method: command
baud: 115200 #250000

[include config/PIS.cfg]

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[input_shaper]
shaper_freq_x: 58 # 9900 mm/sec^2
shaper_type_x: mzv
shaper_freq_y: 36.8 # 4000 mm/sec^2
shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 4000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 20.0


[include config/stepper.cfg]
[include config/extruder.cfg]
[include config/bltouch.cfg]
[include config/KAMP_Settings.cfg]
[include config/Adaptive_Meshing.cfg]
[include config/Line_Purge.cfg]
[include config/Macros.cfg]

[virtual_sdcard]
path: /home/justin/printer_data/gcodes

[idle_timeout]
timeout: 172800

[safe_z_home]
home_xy_position: 203, 167 #188, 182
speed: 100
z_hop: 10
z_hop_speed: 5

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_kp = 65.864
#pid_ki = 0.706
#pid_kd = 1536.277
min_temp: 0
max_temp: 130

[heater_fan controller_fan]
pin: PB15
heater: heater_bed, extruder
heater_temp: 45.0
fan_speed: 1.0
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin:PC15
runout_gcode: PAUSE
insert_gcode: RESUME

[gcode_arcs]
resolution: 0.1

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.260
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.009583, -0.000833, -0.009167
#*# 	  -0.012083, 0.025417, 0.039583
#*# 	  -0.007083, 0.015000, -0.003333
#*# tension = 0.2
#*# min_x = 165.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 165.0
#*# x_count = 3
#*# max_y = 185.0
#*# mesh_x_pps = 2
#*# max_x = 185.0
#*#
#*# [heater_bed]
#*# pid_kp = 65.172
#*# pid_ki = 0.836
#*# pid_kd = 1270.852
#*# control = pid
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.978
#*# pid_ki = 1.951
#*# pid_kd = 107.581
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 70.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 48.6
#*#
#*# [bed_mesh glass]
#*# version = 1
#*# points =
#*# 	-0.290000, -0.172500, -0.116250, -0.205000, -0.350000
#*# 	-0.063750, -0.063750, -0.055000, -0.087500, -0.141250
#*# 	0.023750, 0.015000, 0.006250, -0.040000, -0.088750
#*# 	-0.045000, -0.053750, -0.026250, -0.042500, -0.072500
#*# 	-0.016250, -0.003750, -0.010000, -0.043750, -0.071250
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 320.0
#*# mesh_x_pps = 2
#*# max_x = 290.0
